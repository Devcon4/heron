name: Publish Docker image
on:
  push:
    branches:
      - "main"
env:
  USERNAME: Devcon4
  NAMESPACE: heron
jobs:
  get_semver:
    name: Create semver
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
  build_and_push_app:
    name: Build the app docker image
    runs-on: ubuntu-latest
    needs: get_semver
    steps:
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.main-cache
          key: ${{ runner.os }}-main-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-main-
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./app/dockerfile
          pull: true
          push: true
          cache-from: type=local,src=/tmp/.main-cache
          cache-to: type=local,dest=/tmp/.main-cache-new
          tags: |
            ghcr.io/devcon4/heron-app:${{ needs.get_semver.outputs.semVer }}
            ghcr.io/devcon4/heron-app:latest
      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move main cache
        run: |
          rm -rf /tmp/.main-cache
          mv /tmp/.main-cache-new /tmp/.main-cache
  build_and_push_api:
    name: Build the api docker image
    runs-on: ubuntu-latest
    needs: get_semver
    steps:
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.main-cache
          key: ${{ runner.os }}-main-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-main-
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./api/dockerfile
          pull: true
          push: true
          cache-from: type=local,src=/tmp/.main-cache
          cache-to: type=local,dest=/tmp/.main-cache-new
          tags: |
            ghcr.io/devcon4/heron-api:${{ needs.get_semver.outputs.semVer }}
            ghcr.io/devcon4/heron-api:latest
      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move main cache
        run: |
          rm -rf /tmp/.main-cache
          mv /tmp/.main-cache-new /tmp/.main-cache
  create_tag:
    name: Push github tag
    runs-on: ubuntu-latest
    needs:
      - get_semver
      - build_and_push_app
      - build_and_push_api
    steps:
      - name: Create tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ needs.get_semver.outputs.semVer }}",
              sha: context.sha
            })
  deploy:
    needs:
      - create_tag
      - get_semver
    name: Deploy to dev
    runs-on: ubuntu-latest
    env:
      CONNECTIONSTRINGS__DEFAULTCONNECTION: "Server=postgres-postgresql-hl.infra;Port=5432;Database=heron;User Id=axiomuser;Password=${{ secrets.POSTGRES_PASSWORD }}"
    environment:
      name: Development
      url: https://herostats.dev
    steps:
      - uses: actions/checkout@v2
      - name: Set up kubectl
        uses: matootie/dokube@v1.3.4
        with:
          personalAccessToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
          clusterName: axiom
      - uses: imranismail/setup-kustomize@v1
      - continue-on-error: true
        run: kubectl create namespace ${{ env.NAMESPACE }}
      - run: kubectl config set-context --current --namespace ${{ env.NAMESPACE }}
      - continue-on-error: true
        run: kubectl create secret generic heron-appsettings-secret --from-literal CONNECTIONSTRINGS__DEFAULTCONNECTION=${{ env.CONNECTIONSTRINGS__DEFAULTCONNECTION }}
      - continue-on-error: true
        run: kubectl create secret docker-registry ghcr-pull-secret --namespace ${{ env.NAMESPACE }} --docker-server="ghcr.io" --docker-username="${{ env.USERNAME }}" --docker-password="${{ secrets.GHCR_PAT }}"
      - run: |
          cd ./k8s/
          kustomize edit set image ghcr.io/devcon4/heron-api:${{ needs.get_semver.outputs.semVer }}
          kustomize edit set image ghcr.io/devcon4/heron-app:${{ needs.get_semver.outputs.semVer }}
      - run: kubectl apply -k ./k8s/
      - run: |
          kubectl rollout restart deployment heron-api &&
          kubectl rollout restart deployment heron-app
      - run: |
          kubectl rollout status deployment heron-api --timeout=4m &&
          kubectl rollout status deployment heron-app --timeout=4m
