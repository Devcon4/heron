FROM golang:alpine as build

RUN apk update \
  && apk add -U --no-cache ca-certificates \
  && update-ca-certificates \
  && apk add -U --no-cache tzdata

RUN mkdir /api
WORKDIR /api

COPY ./api/go.mod .
# TODO uncomment once go.sum exists.
# COPY ./api/go.sum .

RUN go mod download

COPY ./api .

# These options create smaller go builds.
# CGO_ENABLE=0: builds staticaly linked binaries (we are in a scratch image so no libs to dynamically link to)
# -ldflags=-w: Disabled DWARF generation (breakpoints, etc)
# -ldflags=-s: Disables symbol table
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-w -s" -o /go/bin/heron

FROM scratch as runtime000

COPY --from=build /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=build /usr/share/zoneinfo /usr/share/zoneinfo
COPY --from=build /go/bin/heron /go/bin/heron

ENTRYPOINT [ "/go/bin/heron" ]